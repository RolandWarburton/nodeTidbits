events {
  worker_connections 4096;
}

http {
      log_format  main  '$remote_addr - "$request" '
                      # '$status $body_bytes_sent "$http_referer" '
                      # '"$http_user_agent" "$http_x_forwarded_for"';
  # access_log  off;
  # this header is added so you can see which IP is actually requesting your service. (instead of the GW)
  proxy_set_header    X-Real-IP           $remote_addr;
  # store array of forwarded clients the client has been proxied through
  proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
  # write what protocol is being used between client and server (http/https)
  proxy_set_header    X-Forwarded-Proto   $scheme;
  # set the host for reverse dns lookups (ip -> domain name) to work correctly
  proxy_set_header    Host                $host;
  # shows what the real host of the request is instead of the reverse proxy.
  proxy_set_header    X-Forwarded-Host    $host;
  # Helps identify what port the client requested the server on.
  proxy_set_header    X-Forwarded-Port    $server_port;

  upstream ms1 {
    server ms1:8080;
  }
  
  upstream auth {
    server auth:8080;
  }

  server {
    listen 8080;
    access_log  /var/log/nginx/access.log main;
    
    location /auth {
      proxy_pass  http://auth;
    }

    location /ms1 {
      auth_request /auth;
      proxy_pass  http://ms1;
    }

    error_page 401 = @error401;

    # If the user is not logged in, redirect them to login URL
    location @error401 {
      return 302 http://devel/auth/promptlogin?serviceURL=http://$http_host$request_uri;
    }
  }
}
